@using Domain
@using Model.Entities
@inject IRepositoryAsync<MercenaryReputation> MercenaryReputationRepository;
@inject IRepositoryAsync<CrimeSyndicate> CrimeSyndicateRepository;
@page "/Crimes_c_view"
<h3>Crimes_c_view</h3>
    <table class="table">
        <thead> 
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Name</th>
            <th scope="col">Location</th>
        </tr>
        </thead>
        <tbody>
@foreach (var currentSyn in Return)
{

        <tr>
            <th scope="row">@currentSyn.SyndicateId</th>
            <td>@currentSyn.Name</td>
            <td>@currentSyn.Location</td>
        </tr>

}
        </tbody>
    </table>
@code {
    public List<CrimeSyndicate>? Syndicates { get; set; } = new List<CrimeSyndicate>(); 
    public List<MercenaryReputation>? Crimes { get; set; } = new(); 
    public List<CrimeSyndicate>? Return { get; set; } = new(); 
    protected async override Task OnInitializedAsync()
    {
        Syndicates = await CrimeSyndicateRepository.ReadAll();
    
        foreach (var syndicate in Syndicates)
        {
            Crimes = await MercenaryReputationRepository.Read(m => m.SyndicateId == syndicate.SyndicateId);
            if (Crimes.Count!=0)
            {
                Return.Add(syndicate);
            }
        }

        
    }

}